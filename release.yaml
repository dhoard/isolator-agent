#
# Copyright (C) 2024-present Pipeliner project authors and contributors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
pipeline:
  name: release
  with:
    output_directory: OUTPUT
  jobs:
    - name: release
      steps:
        - name: check for release property
          run: if [ -z "${{ release }}" ]; then echo "release variable is required, exiting" && exit 1; fi
        - name: change version
          run: |
            ./mvnw versions:set -DnewVersion="${{ release }}" -DprocessAllModules >> /dev/null
            rm -Rf $(find . -name "*versionsBackup")
        - name: build
          run: ./mvnw clean package
        - name: clean output directory
          run: rm -Rf ${{ output_directory }}/*
        - name: create output directory
          run: mkdir -p ${{ output_directory }}
        - name: copy jar
          run: cp -R target/isolator-agent-${{ release }}.jar ${{ output_directory }}/isolator-agent-${{ release }}.jar
        - name: create checksums
          working-directory: ${{ output_directory }}
          run: |
            md5sum isolator-agent-${{ release }}.jar | | awk '{print $1}' > isolator-agent-${{ release }}.jar.md5
            sha1sum isolator-agent-${{ release }}.jar | awk '{print $1}' > isolator-agent-${{ release }}.jar.sha1
            sha256sum isolator-agent-${{ release }}.jar | awk '{print $1}' > isolator-agent-${{ release }}.jar.sha256
            sha512sum isolator-agent-${{ release }}.jar | awk '{print $1}' > isolator-agent-${{ release }}.jar.sha512
        - name: commit version
          run: |
            git add -u
            git commit -s -m "release-${{ release }}"
        - name: tag version
          run: |
            git tag "${{ release }}"
            git push --tags
        - name: checkout & push release branch
          run: |
            git checkout -b "release-${{ release }}"
            git push --set-upstream origin "release-${{ release }}"
        - name: checkout main
          run: git checkout main
        - name: change version
          run: |
            ./mvnw versions:set -DnewVersion="${{ release }}-post" -DprocessAllModules >> /dev/null
            rm -Rf $(find . -name "*versionsBackup")
        - name: commit version
          run: |
            git add -u
            git commit -s -m "Prepare for development"
        - name: git push
          run: git push
